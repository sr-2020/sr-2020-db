name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build & Push to dockerhub
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: sr2020/db
          tags: ${{ github.sha }}
          dockerfile: Dockerfile
          username: sr2020
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy_rc:
    if: github.ref == 'refs/heads/deploy'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.SA_EMAIL }}
          service_account_key: ${{ secrets.SA_KEY }}
      - run: gcloud components install kubectl
      - run: gcloud container clusters get-credentials prod --project imposing-elixir-249711 --zone europe-west3-b
      - uses: actions/checkout@v1
      - run: |
          kubectl config set-context --current --namespace=production
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          helm version
          helm delete rc-flyway-new
          helm install rc-flyway-new helm/flyway/ -f helm/flyway/values/rc/values.yaml --wait --set image.tag=$GITHUB_SHA
          kubectl logs -f $(kubectl get pods -l "job-name=rc-flyway-new" --no-headers -o custom-columns=":metadata.name")

  deploy_production:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.SA_EMAIL }}
          service_account_key: ${{ secrets.SA_KEY }}
      - run: gcloud components install kubectl
      - run: gcloud container clusters get-credentials prod --project imposing-elixir-249711 --zone europe-west3-b
      - uses: actions/checkout@v1
      - run: |
          kubectl config set-context --current --namespace=production
          kubectl set image deployment/flyway flyway=sr2020/db:$GITHUB_SHA --record
          kubectl rollout status deployment/flyway
